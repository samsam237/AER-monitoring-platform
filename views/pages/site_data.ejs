<div class="page-container">
  <a href="/sites" class="back-link">← Retour au site</a>

  <h2>Données du site : <%= siteName %></h2>

  <div id="data-table-container">
    <table id="data-table">
      <thead></thead>
      <tbody></tbody>
    </table>
    <div id="pagination-controls"></div>
  </div>
</div>

<style>
  .page-container {
    padding: 2em;
    font-family: sans-serif;
  }

  .back-link {
    text-decoration: none;
    color: #3498db;
    font-size: 1rem;
    margin-bottom: 1em;
    display: inline-block;
  }

  #data-table-container{
    width: 100%;          /* ou une largeur fixe, ex: 800px */
    overflow-x: auto;     /* active la barre de défilement horizontale si nécessaire */
    border: 3px solid #218838; border-radius: 5px;
    padding: 3px;
  }

  #data-table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1em;
  }

  #data-table th,
  #data-table td {
    border: 1px solid #ccc;
    padding: 0.75em;
    text-align: left;
  }

  #data-table th {
    background-color: #f0f0f0;
  }

  #pagination-controls {
    margin-top: 1em;
    text-align: center;
  }

  .pagination-button {
    padding: 0.5em 1em;
    margin: 0 0.25em;
    cursor: pointer;
    background-color: #3498db;
    color: white;
    border: none;
    border-radius: 4px;
  }

  .pagination-button:disabled {
    background-color: #ccc;
    cursor: not-allowed;
  }
</style>

<script>
  const siteName = "<%= siteName %>";
  const pageSize = 10;
  let currentPage = 1;
  let allData = [];

  async function fetchData() {
    try {
      const res = await fetch(`/api/site/${siteName}/data`);
      const json = await res.json();
      allData = json.data; // ⚠️ bien accéder à .data si ta réponse est { data: [...] }

      renderTable();
    } catch (err) {
      console.error(err);
      document.getElementById("data-table-container").innerHTML =
        "<p>Erreur de chargement des données.</p>";
    }
  }

  function renderTable() {
    console.log("allData : ");
    console.log(allData);
    
    if (allData.length === 0) {
      document.getElementById("data-table-container").innerHTML = "<p>Compte vide</p>";
      return;
    }

    // ➤ Étape 1 : Identifier toutes les colonnes existantes dans toutes les entrées
    const allColumnsSet = new Set();
    allData.forEach(item => {
      Object.keys(item).forEach(key => allColumnsSet.add(key));
    });
    const allColumns = Array.from(allColumnsSet);

    // ➤ Pagination
    const start = (currentPage - 1) * pageSize;
    const end = start + pageSize;
    const pageData = allData.slice(start, end);

    const table = document.getElementById("data-table");
    const thead = table.querySelector("thead");
    const tbody = table.querySelector("tbody");

    // ➤ Générer en-têtes
    thead.innerHTML = "";
    const headerRow = document.createElement("tr");
    allColumns.forEach(key => {
      const th = document.createElement("th");
      th.textContent = key;
      headerRow.appendChild(th);
    });
    thead.appendChild(headerRow);

    // ➤ Générer lignes
    tbody.innerHTML = "";
    pageData.forEach(row => {
      const tr = document.createElement("tr");
      allColumns.forEach(key => {
        const td = document.createElement("td");
        td.textContent = row[key] !== undefined ? row[key] : " ";
        tr.appendChild(td);
      });
      tbody.appendChild(tr);
    });

    renderPagination();
  }

  function renderPagination() {
    const totalPages = Math.ceil(allData.length / pageSize);
    const container = document.getElementById("pagination-controls");
    container.innerHTML = "";

    for (let i = 1; i <= totalPages; i++) {
      const btn = document.createElement("button");
      btn.textContent = i;
      btn.className = "pagination-button";
      if (i === currentPage) btn.disabled = true;
      btn.onclick = () => {
        currentPage = i;
        renderTable();
      };
      container.appendChild(btn);
    }
  }

  window.addEventListener("DOMContentLoaded", fetchData);
</script>
