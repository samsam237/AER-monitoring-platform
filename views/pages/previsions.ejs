<div class="sites">
  <ul class="sites-list">
    <li class="site">Bibia</li>
    <li class="site">Bessounkang</li>
    <li class="site">Koumassi</li>
    <li class="site">Libanda</li>
    <li class="site">Mangouma</li>
    <li class="site">Melondo</li>
    <li class="site">Ndokayo</li>
    <li class="site">Ato boga</li>
    <li class="site">Abbe yassouko</li>
  </ul>
</div>

<div class="previsions">
  <br>
  <h3>site : <span class="site-title"></span></h3>
  <br>
  <label>Date de d√©but : <input type="date" id="startDate" class="input-date"></label>
  <label>Date de fin : <input type="date" id="endDate" class="input-date"></label>
  <button onclick="filterAndDisplay()" class="button-filter">Filtrer</button>

  <canvas id="myChart" max-width="800" max-height="300"></canvas>
  <table id="dataTable">
    <thead><tr><th>Date</th><th>Pr√©vision (kWh)</th></tr></thead>
    <tbody></tbody>
  </table>

</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    let fullData = [];

    async function loadData() {
      try {
        const response = await fetch('/api/data_prevision'); // üîÅ Remplace par ton URL
        const json = await response.json();
       
        fullData = json.map(row => ({
          date: new Date(row["date"]),
          valeur: parseFloat(row["Pr√©vision RNA"]) * 168.52
        }));

        // alert("Donn√©es JSON charg√©es !");
      } catch (err) {
        console.error("Erreur lors du chargement :", err);
        // alert("Erreur de chargement des donn√©es.");
      }
    }

    function filterAndDisplay() {
      const start = new Date(document.getElementById('startDate').value);
      const end = new Date(document.getElementById('endDate').value);
      if (isNaN(start) || isNaN(end)) {
        alert("Veuillez entrer des dates valides.");
        return;
      }

      const filtered = fullData.filter(d => d.date >= start && d.date <= end);
      const tbody = document.querySelector('#dataTable tbody');
      tbody.innerHTML = '';

      filtered.forEach(row => {
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${row.date.toISOString().split('T')[0]}</td><td>${row.valeur.toFixed(4)}</td>`;
        tbody.appendChild(tr);
      });

      const labels = filtered.map(r => r.date.toISOString().split('T')[0]);
      const data = filtered.map(r => r.valeur);

      drawChart(labels, data);
    }

    let chart;
    function drawChart(labels, data) {
      const ctx = document.getElementById('myChart').getContext('2d');
      if (chart) chart.destroy();

      chart = new Chart(ctx, {
        type: 'line',
        data: {
          labels,
          datasets: [{
            label: 'Pr√©vision RNA',
            data,
            borderColor: 'blue',
            backgroundColor: 'rgba(0,0,255,0.1)',
            fill: true,
            tension: 0.3
          }]
        },
        options: {
          scales: {
            x: { title: { display: true, text: 'Date' }},
            y: { title: { display: true, text: 'Valeur RNA' }}
          }
        }
      });
    }

    loadData();
</script>

<script>
  document.querySelectorAll(".site").forEach(elt => {
    elt.addEventListener("click", function (){
      document.querySelector(".site-title").innerHTML = elt.innerHTML
      if (elt.innerHTML === "Bibia"){
        loadData()
      }else{
        fullData = []
        console.log()
      }
    })    
  })
  
</script>

<style>
    .previsions table { border-collapse: collapse; width: 100%; margin-top: 20px; }
    .previsions th, .previsions td { border: 1px solid #ccc; padding: 8px; text-align: center; }
    .previsions input[type="date"] { margin: 10px 10px 10px 0; }
    .sites-list {display: flex; flex-direction: row; justify-content: space-around; width: 100%; height: 70px; align-items: center; list-style: none; padding: 0; margin: 0;}
    .site, .button-filter {
      color: #333;
      background: linear-gradient(135deg, #f5f7fa, #c3cfe2);
      border-radius: 12px;
      padding: .5em;
      margin: 1em;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      width: 250px; height: 30px;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
      cursor: pointer;
      font-family: "Segoe UI", sans-serif;
      text-align: center;
    }
    .site:hover, .button-filter:hover{
      transform: translateY(-5px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }
    .button-filter{
      padding: 0; border: none;
      text-align: center;
      width: 100px;
    }
    .input-date{
      border: 2px solid #859fa1; border-radius: 4px;
      color: #333; box-sizing: border-box;
      height: 23px;
    }
    .input-date:focus{
      border-color: #4A90E2; outline: none; box-shadow: 0 0 4px rgba(74, 144, 226, 0.4);
    }
    h3{
      color: #218838;
    }
</style>